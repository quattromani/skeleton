// Pull globals for individually compiled css files
@import "../globals/allGlobals";

/* ==========================================================================
    Layout -- Version: 1.9.0.2 - Updated: 2/17/2014
   ========================================================================== */

.full {
  width: 100%;
}

.container {
  display: block;
  width: 94%;
  max-width: $site-width;
  @include margin(0,auto);
  @include padding($padding,0);
  overflow: visible;
}

.content {
  position: relative;
  overflow: auto;
  z-index: 0;
}

/* Clearfix */
.clearfix, %clearfix {
  *zoom: 1;
  &:before,
  &:after {
    content: " ";
    display: table;
  }
  &:after {
    clear: both;
  }
}

/* ==========================
    Grid
   ========================== */

.row {
  margin-bottom: $margin;
  @extend %clearfix;
  &:last-of-type {
    margin-bottom: 0;
  }
}

.column {
  float: left;
  min-height: 1px;
  width: 100%;
  margin-left: $site-gutter-width;
  border: 0;
  -webkit-background-clip: padding-box;
  -moz-background-clip: padding-box;
  background-clip: padding-box;
  &:first-of-type {
    margin-left: 0;
  }
}

.column {
  &.full {
    width: 100%;
  }
  &.half {
    width: (100 - ($site-gutter-width*1))/2;
    .marginless & {
      width: (100% / 2);
    }
  }
  &.third {
    width: (100 - ($site-gutter-width*2))/3;
    .marginless & {
      width: (100% / 3);
    }
  }
  &.fourth {
    width: (100 - ($site-gutter-width*3))/4;
    .marginless & {
      width: (100% / 4);
    }
  }
  &.fifth {
    width: (100 - ($site-gutter-width*4))/5;
    .marginless & {
      width: (100% / 5);
    }
  }
  &.sixth {
    width: (100 - ($site-gutter-width*5))/6;
    .marginless & {
      width: (100% / 6);
    }
  }
  &.eighth {
    width: (100 - ($site-gutter-width*7))/8;
    .marginless & {
      width: (100% / 8);
    }
  }
  &.tenth {
    width: (100 - ($site-gutter-width*9))/10;
    .marginless & {
      width: (100% / 10);
    }
  }
  &.twelfth {
    width: (100 - ($site-gutter-width*11))/12;
    .marginless & {
      width: (100% / 12);
    }
  }
  // Grid Combinations
  &.three-eighths {
    width: (((100 - ($site-gutter-width*7))/8) * 3) + ($site-gutter-width * 2);
    .marginless & {
      width: (100% / 8) * 3 ;
    }
  }
  &.two-fifths {
    width: (((100 - ($site-gutter-width*4))/5) * 2) + $site-gutter-width;
    .marginless & {
      width: 25% ;
    }
  }
  &.two-thirds {
    width: (((100 - ($site-gutter-width*2))/3) * 2) + $site-gutter-width;
    .marginless & {
      width: (100% / 3) * 2;
    }
  }
  &.five-eighths {
    width: (((100 - ($site-gutter-width*7))/8) * 5) + ($site-gutter-width * 4);
    .marginless & {
      width: (100% / 8) * 5;
    }
  }
  &.three-fourths {
    width: (((100 - ($site-gutter-width*3))/4) * 3) + ($site-gutter-width * 2);
    .marginless & {
      width: (100% / 4) * 3;
    }
  }
  &.three-fifths {
    width: (((100 - ($site-gutter-width*4))/5) * 3) + ($site-gutter-width * 2);
    .marginless & {
      width: (100% / 5) * 3;
    }
  }
  &.four-fifths {
    width: (((100 - ($site-gutter-width*4))/5) * 4) + ($site-gutter-width * 3);
    .marginless & {
      width: (100% / 5) * 4;
    }
  }
  .marginless & {
    margin-left: 0;
  }
}

.push {
  float: right;
}

.pull {
  float: left;
  margin-left: 0;
}

/* ==========================
    Multi Column
   ========================== */

[class*='two_column_'] {
  @include columns(2, ($padding * 2));
}

[class*='three_column_'] {
  @include columns(3, ($padding * 2));
}

[class*='four_column_'] {
  @include columns(4, ($padding * 2));
}

@media (max-width: $bp-medium) {

  .column {
    &.half, &.third {
      width: 100%;
      margin-left: 0;
    }
    &.fourth, &.fifth, &.sixth  {
      width: (100 - ($site-gutter-width*1))/2;
      &:nth-child(2n+1) {
        margin-left: 0;
      }
      .marginless & {
        width: (100% / 2);
      }
    }
    &.eighth, &.tenth, &.twelfth {
      width: (100 - ($site-gutter-width*3))/4;
      &:nth-child(4n+1) {
        margin-left: 0;
      }
      .marginless & {
        width: (100% / 4);
      }
    }
    &.two-fifths {
      width: (100 - ($site-gutter-width*1))/2;
    }
    &.two-thirds, &.three-fourths, &.three-fifths, &.four-fifths {
      width: (100%);
      margin-left: 0;
      .marginless & {
        width: 100%;
      }
    }
    &.three-fourths + .fourth, &.three-fifths + .fifth {
      margin-left: 0;
      & + .fifth {
        margin-left: $site-gutter-width;
        .marginless & {
          margin-left: 0;
        }
      }
    }
  }

}

@media (max-width: $bp-small) {

  .column {
    &.fourth, &.fifth, &.four-fifths {
      width: 100%;
      margin-left: 0;
      .marginless & {
        width: 100%;
      }
    }
    &.sixth, &.eighth, &.tenth, &.twelfth {
      width: (100 - ($site-gutter-width*1))/2;
      &:nth-child(2n+1) {
        margin-left: 0;
      }
      .marginless & {
        width: (100% / 2);
      }
    }
    &.three-fourths + .fourth, &.three-fifths + .fifth {
      margin-left: 0;
      & + .fifth {
        margin-left: 0;
      }
    }
  }

  [class*='two_column_'], [class*='three_column_'], [class*='four_column_'] {
    @include columns(1,0);
  }

}